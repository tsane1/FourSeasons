<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_45) on Wed Mar 11 12:59:25 EDT 2015 -->
<title>RectangleHierarchy</title>
<meta name="date" content="2015-03-11">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="RectangleHierarchy";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/RectangleHierarchy.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../ks/common/view/PileView.html" title="class in ks.common.view"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../ks/common/view/RectangleHierarchyVisitor.html" title="interface in ks.common.view"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?ks/common/view/RectangleHierarchy.html" target="_top">Frames</a></li>
<li><a href="RectangleHierarchy.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">ks.common.view</div>
<h2 title="Class RectangleHierarchy" class="title">Class RectangleHierarchy</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>ks.common.view.RectangleHierarchy</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">RectangleHierarchy</span>
extends java.lang.Object</pre>
<div class="block">Manages a Tree of rectangles that represent the non-widget elements
 on the container.
 <p>
 Assuming an outer boundary rectangle (x,y,width,height), this class keeps track
 of 'negative space' assuming that each inserted rectangle represents 'positive 
 space'.
 <p>
 For example, given the root (x,y,width,height) and the rectangle (u,v,l,m) is 
 inserted, this node has four children R0, R1, R2, R3.
 <p>
   R0 = (x,y,width,v-y)                ;; top horizontal slice<br>
   R1 = (x,v,u-1,m)                    ;; rectangle slice to the left of the<br>
                                       ;; inserted rectangle<br>
   R2 = (u+m,v,width-m-(u-x))          ;; rectangle slice to the right of the <br>
                                       ;; inserted rectangle<br>
   R3 = (x,v+m,width,height-m-(v-y))   ;; bottom horizontal slice.
 <p>
 insert (Rectangle r) is a recursive method, enabling partialling intersecting 
 rectangles to be modeled.
 <p></div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>George T. Heineman (heineman@cs.wpi.edu)</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../ks/common/view/RectangleHierarchy.html#RectangleHierarchy(java.awt.Rectangle)">RectangleHierarchy</a></strong>(java.awt.Rectangle&nbsp;initialBounds)</code>
<div class="block">RectangleHierarchy constructor.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../ks/common/view/RectangleHierarchy.html#accept(java.awt.Graphics, ks.common.view.RectangleHierarchyVisitor)">accept</a></strong>(java.awt.Graphics&nbsp;g,
      <a href="../../../ks/common/view/RectangleHierarchyVisitor.html" title="interface in ks.common.view">RectangleHierarchyVisitor</a>&nbsp;visitor)</code>
<div class="block">Accept visitor and use double dispatching to pass ourselves in as a parameter
 to the visitor.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../ks/common/view/RectangleHierarchy.html#accept(java.awt.Graphics, ks.common.view.RectangleHierarchyVisitor, java.awt.Rectangle)">accept</a></strong>(java.awt.Graphics&nbsp;g,
      <a href="../../../ks/common/view/RectangleHierarchyVisitor.html" title="interface in ks.common.view">RectangleHierarchyVisitor</a>&nbsp;visitor,
      java.awt.Rectangle&nbsp;clip)</code>
<div class="block">Accept visitor and use double dispatching to pass ourselves in as a parameter
 to the visitor.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.awt.Rectangle</code></td>
<td class="colLast"><code><strong><a href="../../../ks/common/view/RectangleHierarchy.html#getBounds()">getBounds</a></strong>()</code>
<div class="block">Return bounds of this node.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../ks/common/view/RectangleHierarchy.html" title="class in ks.common.view">RectangleHierarchy</a>[]</code></td>
<td class="colLast"><code><strong><a href="../../../ks/common/view/RectangleHierarchy.html#getChildren()">getChildren</a></strong>()</code>
<div class="block">Return all children of the given node in array (or null if there are no children).</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../ks/common/view/RectangleHierarchy.html#insert(java.awt.Rectangle)">insert</a></strong>(java.awt.Rectangle&nbsp;r)</code>
<div class="block">Insert the given rectangle into the hierarchy.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../ks/common/view/RectangleHierarchy.html#toString()">toString</a></strong>()</code>
<div class="block">Convert to String the hierarchy root Rectangle.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="RectangleHierarchy(java.awt.Rectangle)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>RectangleHierarchy</h4>
<pre>public&nbsp;RectangleHierarchy(java.awt.Rectangle&nbsp;initialBounds)</pre>
<div class="block">RectangleHierarchy constructor.</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="accept(java.awt.Graphics, ks.common.view.RectangleHierarchyVisitor)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>accept</h4>
<pre>public&nbsp;void&nbsp;accept(java.awt.Graphics&nbsp;g,
          <a href="../../../ks/common/view/RectangleHierarchyVisitor.html" title="interface in ks.common.view">RectangleHierarchyVisitor</a>&nbsp;visitor)</pre>
<div class="block">Accept visitor and use double dispatching to pass ourselves in as a parameter
 to the visitor.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>visitor</code> - ks.common.view.RectangleHierarchyVisitor</dd></dl>
</li>
</ul>
<a name="accept(java.awt.Graphics, ks.common.view.RectangleHierarchyVisitor, java.awt.Rectangle)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>accept</h4>
<pre>public&nbsp;void&nbsp;accept(java.awt.Graphics&nbsp;g,
          <a href="../../../ks/common/view/RectangleHierarchyVisitor.html" title="interface in ks.common.view">RectangleHierarchyVisitor</a>&nbsp;visitor,
          java.awt.Rectangle&nbsp;clip)</pre>
<div class="block">Accept visitor and use double dispatching to pass ourselves in as a parameter
 to the visitor.
 <p>
 Clip all drawing to this clip Rect. [clip is unaffected by this invocation.]
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>visitor</code> - ks.common.view.RectangleHierarchyVisitor</dd><dd><code>clip</code> - Rectangle</dd></dl>
</li>
</ul>
<a name="getBounds()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBounds</h4>
<pre>public&nbsp;java.awt.Rectangle&nbsp;getBounds()</pre>
<div class="block">Return bounds of this node.
 <p>
 The rectangle returned is the actual rectangle. DO NOT MODIFY THIS OBJECT.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>Rectangle</dd></dl>
</li>
</ul>
<a name="getChildren()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getChildren</h4>
<pre>public&nbsp;<a href="../../../ks/common/view/RectangleHierarchy.html" title="class in ks.common.view">RectangleHierarchy</a>[]&nbsp;getChildren()</pre>
<div class="block">Return all children of the given node in array (or null if there are no children).</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>ks.common.view.RectangleHierarchy[]</dd></dl>
</li>
</ul>
<a name="insert(java.awt.Rectangle)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>insert</h4>
<pre>public&nbsp;boolean&nbsp;insert(java.awt.Rectangle&nbsp;r)</pre>
<div class="block">Insert the given rectangle into the hierarchy.
 <p>
 The rectangle represents the bounds of a widget.  We essentially need to model the other
 portions that remain as rectangles.  Consider the widget as positive space; the RectangleHierarchy
 models the negative space.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>r</code> - Rectangle</dd>
<dt><span class="strong">Returns:</span></dt><dd>boolean</dd></dl>
</li>
</ul>
<a name="toString()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>toString</h4>
<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
<div class="block">Convert to String the hierarchy root Rectangle.</div>
<dl>
<dt><strong>Overrides:</strong></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>java.lang.String</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/RectangleHierarchy.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../ks/common/view/PileView.html" title="class in ks.common.view"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../ks/common/view/RectangleHierarchyVisitor.html" title="interface in ks.common.view"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?ks/common/view/RectangleHierarchy.html" target="_top">Frames</a></li>
<li><a href="RectangleHierarchy.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
