<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_45) on Wed Mar 11 12:59:34 EDT 2015 -->
<title>I-Index</title>
<meta name="date" content="2015-03-11">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="I-Index";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li>Use</li>
<li><a href="../overview-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-8.html">Prev Letter</a></li>
<li><a href="index-10.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-filesindex-9.html" target="_top">Frames</a></li>
<li><a href="index-9.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="contentContainer"><a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">H</a>&nbsp;<a href="index-9.html">I</a>&nbsp;<a href="index-10.html">J</a>&nbsp;<a href="index-11.html">K</a>&nbsp;<a href="index-12.html">L</a>&nbsp;<a href="index-13.html">M</a>&nbsp;<a href="index-14.html">N</a>&nbsp;<a href="index-15.html">O</a>&nbsp;<a href="index-16.html">P</a>&nbsp;<a href="index-17.html">Q</a>&nbsp;<a href="index-18.html">R</a>&nbsp;<a href="index-19.html">S</a>&nbsp;<a href="index-20.html">T</a>&nbsp;<a href="index-21.html">U</a>&nbsp;<a href="index-22.html">V</a>&nbsp;<a href="index-23.html">W</a>&nbsp;<a href="index-24.html">Y</a>&nbsp;<a name="_I_">
<!--   -->
</a>
<h2 class="title">I</h2>
<dl>
<dt><a href="../ks/common/view/ICardImagesStatus.html" title="interface in ks.common.view"><span class="strong">ICardImagesStatus</span></a> - Interface in <a href="../ks/common/view/package-summary.html">ks.common.view</a></dt>
<dd>
<div class="block">Notify status of CardImagesLoader.</div>
</dd>
<dt><a href="../ks/common/model/IContextualize.html" title="interface in ks.common.model"><span class="strong">IContextualize</span></a> - Interface in <a href="../ks/common/model/package-summary.html">ks.common.model</a></dt>
<dd>
<div class="block">When a Move is generated on one client and shipped to another
 client for processing, it must be 'recontextualized' so as
 to properly hook up with the ModelElements as found on the 
 remote client.</div>
</dd>
<dt><a href="../heineman/Idiot.html" title="class in heineman"><span class="strong">Idiot</span></a> - Class in <a href="../heineman/package-summary.html">heineman</a></dt>
<dd>
<div class="block">Game Type: Idiot
 Base Type: --
 Model{
   d as Deck;
   col1, col2, col3, col4 as Column;
   score as Integer;
 }

 Actions {
   removeCard  map DoubleClick from:Column
   dealFour    map Click       d:Deck
   moveCard    map Drag Card   from:Column to:Column
 }

 Validation {
   dealFour(d) : not d.empty()
   moveCard (from,to) : to.empty() and not from.empty()
   removeCard (from) : not from.empty() and 
                                           EXISTS Column c1 suchthat (from != c1) and (c1.suit() == from.suit()) and (c1.rank() > from.rank())
 }

 Description {
   dealFour (d) : col1.add (d.get()); col2.add(d.get()); col3.add(d.get()); col4.add (d.get());
   removeCard (from) : from.get(); score++;
   moveCard (from, to) : to.add (from.get());
 }

 Prepare {
   d.create (seed);
   d.dealFour();
 }</div>
</dd>
<dt><span class="strong"><a href="../heineman/Idiot.html#Idiot()">Idiot()</a></span> - Constructor for class heineman.<a href="../heineman/Idiot.html" title="class in heineman">Idiot</a></dt>
<dd>
<div class="block">Idiot constructor comment.</div>
</dd>
<dt><a href="../heineman/idiot/IdiotColumnAdapter.html" title="class in heineman.idiot"><span class="strong">IdiotColumnAdapter</span></a> - Class in <a href="../heineman/idiot/package-summary.html">heineman.idiot</a></dt>
<dd>
<div class="block">Controller for all interaction with the ColumnView widget.</div>
</dd>
<dt><span class="strong"><a href="../heineman/idiot/IdiotColumnAdapter.html#IdiotColumnAdapter(heineman.Idiot, ks.common.view.ColumnView)">IdiotColumnAdapter(Idiot, ColumnView)</a></span> - Constructor for class heineman.idiot.<a href="../heineman/idiot/IdiotColumnAdapter.html" title="class in heineman.idiot">IdiotColumnAdapter</a></dt>
<dd>
<div class="block">IdiotColumnAdapter constructor.</div>
</dd>
<dt><a href="../heineman/idiot/IdiotDeckAdapter.html" title="class in heineman.idiot"><span class="strong">IdiotDeckAdapter</span></a> - Class in <a href="../heineman/idiot/package-summary.html">heineman.idiot</a></dt>
<dd>
<div class="block">Controller for all interaction with the DeckView widget.</div>
</dd>
<dt><span class="strong"><a href="../heineman/idiot/IdiotDeckAdapter.html#IdiotDeckAdapter(heineman.Idiot, ks.common.view.DeckView)">IdiotDeckAdapter(Idiot, DeckView)</a></span> - Constructor for class heineman.idiot.<a href="../heineman/idiot/IdiotDeckAdapter.html" title="class in heineman.idiot">IdiotDeckAdapter</a></dt>
<dd>
<div class="block">IdiotDeckAdapter constructor.</div>
</dd>
<dt><a href="../wordsteal/boundaries/main/IDrawLayer.html" title="interface in wordsteal.boundaries.main"><span class="strong">IDrawLayer</span></a> - Interface in <a href="../wordsteal/boundaries/main/package-summary.html">wordsteal.boundaries.main</a></dt>
<dd>
<div class="block">Decorator interface for the board and rack</div>
</dd>
<dt><a href="../wordsteal/boundaries/main/IExternalInterface.html" title="interface in wordsteal.boundaries.main"><span class="strong">IExternalInterface</span></a> - Interface in <a href="../wordsteal/boundaries/main/package-summary.html">wordsteal.boundaries.main</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../ks/client/gamefactory/skin/ImageCopier.html" title="class in ks.client.gamefactory.skin"><span class="strong">ImageCopier</span></a> - Class in <a href="../ks/client/gamefactory/skin/package-summary.html">ks.client.gamefactory.skin</a></dt>
<dd>
<div class="block">Visitor class to fills rectangles with parts of an image.</div>
</dd>
<dt><span class="strong"><a href="../ks/client/gamefactory/skin/ImageCopier.html#ImageCopier(java.awt.Image, java.awt.image.ImageObserver)">ImageCopier(Image, ImageObserver)</a></span> - Constructor for class ks.client.gamefactory.skin.<a href="../ks/client/gamefactory/skin/ImageCopier.html" title="class in ks.client.gamefactory.skin">ImageCopier</a></dt>
<dd>
<div class="block">ImageCopier by default uses this color as the fillRect color when transfering a filled Rectangle.</div>
</dd>
<dt><a href="../ks/client/gamefactory/skin/ImageScroller.html" title="class in ks.client.gamefactory.skin"><span class="strong">ImageScroller</span></a> - Class in <a href="../ks/client/gamefactory/skin/package-summary.html">ks.client.gamefactory.skin</a></dt>
<dd>
<div class="block">Class for presenting a scrolling image on the back of a solitaire game.</div>
</dd>
<dt><span class="strong"><a href="../ks/client/gamefactory/skin/ImageScroller.html#ImageScroller(java.awt.Image, ks.common.view.Container)">ImageScroller(Image, Container)</a></span> - Constructor for class ks.client.gamefactory.skin.<a href="../ks/client/gamefactory/skin/ImageScroller.html" title="class in ks.client.gamefactory.skin">ImageScroller</a></dt>
<dd>
<div class="block">ImageScroller constructor.</div>
</dd>
<dt><span class="strong"><a href="../ks/common/view/Widget.html#inBounds(java.awt.Point)">inBounds(Point)</a></span> - Method in class ks.common.view.<a href="../ks/common/view/Widget.html" title="class in ks.common.view">Widget</a></dt>
<dd>
<div class="block">If (x,y) point is within this widget, return true, else false.</div>
</dd>
<dt><span class="strong"><a href="../ks/common/model/MutableInteger.html#increment(int)">increment(int)</a></span> - Method in class ks.common.model.<a href="../ks/common/model/MutableInteger.html" title="class in ks.common.model">MutableInteger</a></dt>
<dd>
<div class="block">Increment the value for this entity.</div>
</dd>
<dt><span class="strong"><a href="../ks/client/gamefactory/GameWindow.html#incrementNumNewHands()">incrementNumNewHands()</a></span> - Method in class ks.client.gamefactory.<a href="../ks/client/gamefactory/GameWindow.html" title="class in ks.client.gamefactory">GameWindow</a></dt>
<dd>
<div class="block">Validate methods for outgoing game updates</div>
</dd>
<dt><span class="strong"><a href="../ks/client/gamefactory/IUpdateStatus.html#incrementNumNewHands()">incrementNumNewHands()</a></span> - Method in interface ks.client.gamefactory.<a href="../ks/client/gamefactory/IUpdateStatus.html" title="interface in ks.client.gamefactory">IUpdateStatus</a></dt>
<dd>
<div class="block">Increment number of new hands.</div>
</dd>
<dt><span class="strong"><a href="../ks/client/gamefactory/GameWindow.html#incrementNumWins()">incrementNumWins()</a></span> - Method in class ks.client.gamefactory.<a href="../ks/client/gamefactory/GameWindow.html" title="class in ks.client.gamefactory">GameWindow</a></dt>
<dd>
<div class="block">Validate methods for outgoing game updates</div>
</dd>
<dt><span class="strong"><a href="../ks/client/gamefactory/IUpdateStatus.html#incrementNumWins()">incrementNumWins()</a></span> - Method in interface ks.client.gamefactory.<a href="../ks/client/gamefactory/IUpdateStatus.html" title="interface in ks.client.gamefactory">IUpdateStatus</a></dt>
<dd>
<div class="block">Increment the number of wins.</div>
</dd>
<dt><span class="strong"><a href="../ks/tests/model/ModelFactory.html#init(ks.common.model.Stack, java.lang.String)">init(Stack, String)</a></span> - Static method in class ks.tests.model.<a href="../ks/tests/model/ModelFactory.html" title="class in ks.tests.model">ModelFactory</a></dt>
<dd>
<div class="block">Initialize a stack to contain a given sequence of cards.</div>
</dd>
<dt><span class="strong"><a href="../brlandry/GrandfatherClock.html#initialize()">initialize()</a></span> - Method in class brlandry.<a href="../brlandry/GrandfatherClock.html" title="class in brlandry">GrandfatherClock</a></dt>
<dd>
<div class="block">Initializes games: creates entity, boundary, and view objects.</div>
</dd>
<dt><span class="strong"><a href="../darrent/FreeCell.html#initialize()">initialize()</a></span> - Method in class darrent.<a href="../darrent/FreeCell.html" title="class in darrent">FreeCell</a></dt>
<dd>
<div class="block">initialize method comment.</div>
</dd>
<dt><span class="strong"><a href="../dijordan/PyramidGame.html#initialize()">initialize()</a></span> - Method in class dijordan.<a href="../dijordan/PyramidGame.html" title="class in dijordan">PyramidGame</a></dt>
<dd>
<div class="block">initialization</div>
</dd>
<dt><span class="strong"><a href="../heineman/Idiot.html#initialize()">initialize()</a></span> - Method in class heineman.<a href="../heineman/Idiot.html" title="class in heineman">Idiot</a></dt>
<dd>
<div class="block">Initialize the game and prepare for playing.</div>
</dd>
<dt><span class="strong"><a href="../heineman/Klondike.html#initialize()">initialize()</a></span> - Method in class heineman.<a href="../heineman/Klondike.html" title="class in heineman">Klondike</a></dt>
<dd>
<div class="block">initialize method comment.</div>
</dd>
<dt><span class="strong"><a href="../kdaquila/Spider.html#initialize()">initialize()</a></span> - Method in class kdaquila.<a href="../kdaquila/Spider.html" title="class in kdaquila">Spider</a></dt>
<dd>
<div class="block">Initialize Spider</div>
</dd>
<dt><span class="strong"><a href="../ks/client/gamefactory/GameWindow.html#initialize(ks.common.games.Solitaire)">initialize(Solitaire)</a></span> - Method in class ks.client.gamefactory.<a href="../ks/client/gamefactory/GameWindow.html" title="class in ks.client.gamefactory">GameWindow</a></dt>
<dd>
<div class="block">Initialize game canvas using specific solitaire game.</div>
</dd>
<dt><span class="strong"><a href="../ks/common/games/Solitaire.html#initialize()">initialize()</a></span> - Method in class ks.common.games.<a href="../ks/common/games/Solitaire.html" title="class in ks.common.games">Solitaire</a></dt>
<dd>
<div class="block">Each solitaire game provides its own initialization routine.</div>
</dd>
<dt><span class="strong"><a href="../ks/common/view/Container.html#initialize(ks.common.games.Solitaire)">initialize(Solitaire)</a></span> - Method in class ks.common.view.<a href="../ks/common/view/Container.html" title="class in ks.common.view">Container</a></dt>
<dd>
<div class="block">Initialize using a Solitaire game that was already constructed elsewhere.</div>
</dd>
<dt><span class="strong"><a href="../scaviola/BCastle.html#initialize()">initialize()</a></span> - Method in class scaviola.<a href="../scaviola/BCastle.html" title="class in scaviola">BCastle</a></dt>
<dd>
<div class="block">Initialize solitaire variation.</div>
</dd>
<dt><span class="strong"><a href="../tutorial/Narcotic0.html#initialize()">initialize()</a></span> - Method in class tutorial.<a href="../tutorial/Narcotic0.html" title="class in tutorial">Narcotic0</a></dt>
<dd>
<div class="block">Initialize solitaire variation.</div>
</dd>
<dt><span class="strong"><a href="../tutorial/Narcotic1.html#initialize()">initialize()</a></span> - Method in class tutorial.<a href="../tutorial/Narcotic1.html" title="class in tutorial">Narcotic1</a></dt>
<dd>
<div class="block">Initialize solitaire variation.</div>
</dd>
<dt><span class="strong"><a href="../tutorial/Narcotic2.html#initialize()">initialize()</a></span> - Method in class tutorial.<a href="../tutorial/Narcotic2.html" title="class in tutorial">Narcotic2</a></dt>
<dd>
<div class="block">Initialize solitaire variation.</div>
</dd>
<dt><span class="strong"><a href="../tutorial/Narcotic3.html#initialize()">initialize()</a></span> - Method in class tutorial.<a href="../tutorial/Narcotic3.html" title="class in tutorial">Narcotic3</a></dt>
<dd>
<div class="block">Initialize solitaire variation.</div>
</dd>
<dt><span class="strong"><a href="../tutorial/Narcotic4.html#initialize()">initialize()</a></span> - Method in class tutorial.<a href="../tutorial/Narcotic4.html" title="class in tutorial">Narcotic4</a></dt>
<dd>
<div class="block">Initialize solitaire variation.</div>
</dd>
<dt><span class="strong"><a href="../tutorial/vfinal/NarcoticFinal.html#initialize()">initialize()</a></span> - Method in class tutorial.vfinal.<a href="../tutorial/vfinal/NarcoticFinal.html" title="class in tutorial.vfinal">NarcoticFinal</a></dt>
<dd>
<div class="block">Initialize solitaire variation.</div>
</dd>
<dt><span class="strong"><a href="../yostinso/FlowerGarden.html#initialize()">initialize()</a></span> - Method in class yostinso.<a href="../yostinso/FlowerGarden.html" title="class in yostinso">FlowerGarden</a></dt>
<dd>
<div class="block">Initializes FlowerGarden Plugin.</div>
</dd>
<dt><span class="strong"><a href="../ks/common/view/RectangleHierarchy.html#insert(java.awt.Rectangle)">insert(Rectangle)</a></span> - Method in class ks.common.view.<a href="../ks/common/view/RectangleHierarchy.html" title="class in ks.common.view">RectangleHierarchy</a></dt>
<dd>
<div class="block">Insert the given rectangle into the hierarchy.</div>
</dd>
<dt><span class="strong"><a href="../wordsteal/entities/Rack.html#insertTile(wordsteal.entities.Tile, int)">insertTile(Tile, int)</a></span> - Method in class wordsteal.entities.<a href="../wordsteal/entities/Rack.html" title="class in wordsteal.entities">Rack</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../wordsteal/boundaries/InstructionsFrame.html" title="class in wordsteal.boundaries"><span class="strong">InstructionsFrame</span></a> - Class in <a href="../wordsteal/boundaries/package-summary.html">wordsteal.boundaries</a></dt>
<dd>
<div class="block">Instructions Frame</div>
</dd>
<dt><span class="strong"><a href="../wordsteal/boundaries/InstructionsFrame.html#InstructionsFrame(java.lang.String)">InstructionsFrame(String)</a></span> - Constructor for class wordsteal.boundaries.<a href="../wordsteal/boundaries/InstructionsFrame.html" title="class in wordsteal.boundaries">InstructionsFrame</a></dt>
<dd>
<div class="block">Creates new form HelpFrame</div>
</dd>
<dt><a href="../ks/common/view/IntegerView.html" title="class in ks.common.view"><span class="strong">IntegerView</span></a> - Class in <a href="../ks/common/view/package-summary.html">ks.common.view</a></dt>
<dd>
<div class="block">A Widget for displaying an integer (such as score or number of cards left).</div>
</dd>
<dt><span class="strong"><a href="../ks/common/view/IntegerView.html#IntegerView(ks.common.model.MutableInteger)">IntegerView(MutableInteger)</a></span> - Constructor for class ks.common.view.<a href="../ks/common/view/IntegerView.html" title="class in ks.common.view">IntegerView</a></dt>
<dd>
<div class="block">Construct view of this Integer model.</div>
</dd>
<dt><span class="strong"><a href="../ks/common/view/Container.html#intersectsWidget(java.awt.Rectangle)">intersectsWidget(Rectangle)</a></span> - Method in class ks.common.view.<a href="../ks/common/view/Container.html" title="class in ks.common.view">Container</a></dt>
<dd>
<div class="block">Returns the first Widget that intersects the given Rectangle (or null if none exist).</div>
</dd>
<dt><span class="strong"><a href="../ks/common/model/Card.html#isAce()">isAce()</a></span> - Method in class ks.common.model.<a href="../ks/common/model/Card.html" title="class in ks.common.model">Card</a></dt>
<dd>
<div class="block">Determine whether the card is an ACE.</div>
</dd>
<dt><span class="strong"><a href="../ks/common/view/Container.html#isActive()">isActive()</a></span> - Method in class ks.common.view.<a href="../ks/common/view/Container.html" title="class in ks.common.view">Container</a></dt>
<dd>
<div class="block">Determine whether the Container is active and ready to process events.</div>
</dd>
<dt><span class="strong"><a href="../dijordan/model/Pyramid.html#isCardThere(int, int)">isCardThere(int, int)</a></span> - Method in class dijordan.model.<a href="../dijordan/model/Pyramid.html" title="class in dijordan.model">Pyramid</a></dt>
<dd>
<div class="block">Determines if there is a card at a row and position</div>
</dd>
<dt><span class="strong"><a href="../dijordan/model/Pyramid.html#isCovered(int, int)">isCovered(int, int)</a></span> - Method in class dijordan.model.<a href="../dijordan/model/Pyramid.html" title="class in dijordan.model">Pyramid</a></dt>
<dd>
<div class="block">determines if a card at row and position is covered</div>
</dd>
<dt><span class="strong"><a href="../dijordan/model/Pyramid.html#isCovered(dijordan.model.PositionCard)">isCovered(PositionCard)</a></span> - Method in class dijordan.model.<a href="../dijordan/model/Pyramid.html" title="class in dijordan.model">Pyramid</a></dt>
<dd>
<div class="block">determines if a card at row and position is covered</div>
</dd>
<dt><span class="strong"><a href="../ks/common/view/Widget.html#isDirty()">isDirty()</a></span> - Method in class ks.common.view.<a href="../ks/common/view/Widget.html" title="class in ks.common.view">Widget</a></dt>
<dd>
<div class="block">Determine whether this widget needs to be recalculated.</div>
</dd>
<dt><span class="strong"><a href="../ks/client/gamefactory/PlayerJPanel.html#isDisabled(java.lang.String)">isDisabled(String)</a></span> - Method in class ks.client.gamefactory.<a href="../ks/client/gamefactory/PlayerJPanel.html" title="class in ks.client.gamefactory">PlayerJPanel</a></dt>
<dd>
<div class="block">Testing method to validate disabled status for given player.</div>
</dd>
<dt><span class="strong"><a href="../ks/client/timer/Timer.html#isEnabled()">isEnabled()</a></span> - Method in class ks.client.timer.<a href="../ks/client/timer/Timer.html" title="class in ks.client.timer">Timer</a></dt>
<dd>
<div class="block">Insert the method's description here.</div>
</dd>
<dt><span class="strong"><a href="../ks/common/model/Card.html#isFaceCard()">isFaceCard()</a></span> - Method in class ks.common.model.<a href="../ks/common/model/Card.html" title="class in ks.common.model">Card</a></dt>
<dd>
<div class="block">Determine whether the Card is a Face Card (Jack, Queen, King).</div>
</dd>
<dt><span class="strong"><a href="../ks/common/model/Card.html#isFaceUp()">isFaceUp()</a></span> - Method in class ks.common.model.<a href="../ks/common/model/Card.html" title="class in ks.common.model">Card</a></dt>
<dd>
<div class="block">Determine whether the Card is face up.</div>
</dd>
<dt><span class="strong"><a href="../wordsteal/entities/Game.html#isFirstTurn()">isFirstTurn()</a></span> - Method in class wordsteal.entities.<a href="../wordsteal/entities/Game.html" title="class in wordsteal.entities">Game</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../wordsteal/boundaries/main/BoardRackPanel.html#isGrabbedTileWithinGameArea(int, int)">isGrabbedTileWithinGameArea(int, int)</a></span> - Method in class wordsteal.boundaries.main.<a href="../wordsteal/boundaries/main/BoardRackPanel.html" title="class in wordsteal.boundaries.main">BoardRackPanel</a></dt>
<dd>
<div class="block">Determines if the given coordinate (relative to the panel) is within the
 game area (rack + board).</div>
</dd>
<dt><span class="strong"><a href="../wordsteal/entities/Game.html#isInactive(int)">isInactive(int)</a></span> - Method in class wordsteal.entities.<a href="../wordsteal/entities/Game.html" title="class in wordsteal.entities">Game</a></dt>
<dd>
<div class="block">Return whether given player is active or not.</div>
</dd>
<dt><span class="strong"><a href="../wordsteal/boundaries/main/MainJPanel.html#isLockedUI()">isLockedUI()</a></span> - Method in class wordsteal.boundaries.main.<a href="../wordsteal/boundaries/main/MainJPanel.html" title="class in wordsteal.boundaries.main">MainJPanel</a></dt>
<dd>
<div class="block">Expose whether GUI has been locked so controllers know.</div>
</dd>
<dt><span class="strong"><a href="../wordsteal/interfaces/IWordstealApp.html#isLockedUI()">isLockedUI()</a></span> - Method in interface wordsteal.interfaces.<a href="../wordsteal/interfaces/IWordstealApp.html" title="interface in wordsteal.interfaces">IWordstealApp</a></dt>
<dd>
<div class="block">Determine whether the GUI has been locked or not.</div>
</dd>
<dt><span class="strong"><a href="../wordsteal/entities/Game.html#isNoPinkEnabled()">isNoPinkEnabled()</a></span> - Method in class wordsteal.entities.<a href="../wordsteal/entities/Game.html" title="class in wordsteal.entities">Game</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../wordsteal/entities/Game.html#isNoSEnabled()">isNoSEnabled()</a></span> - Method in class wordsteal.entities.<a href="../wordsteal/entities/Game.html" title="class in wordsteal.entities">Game</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../yostinso/SuitImages.html#isReady()">isReady()</a></span> - Static method in class yostinso.<a href="../yostinso/SuitImages.html" title="class in yostinso">SuitImages</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../ks/client/timer/Timer.html#isRepeat()">isRepeat()</a></span> - Method in class ks.client.timer.<a href="../ks/client/timer/Timer.html" title="class in ks.client.timer">Timer</a></dt>
<dd>
<div class="block">Obtains the repeat setting of the timer.</div>
</dd>
<dt><span class="strong"><a href="../dijordan/model/Pyramid.html#isSelected()">isSelected()</a></span> - Method in class dijordan.model.<a href="../dijordan/model/Pyramid.html" title="class in dijordan.model">Pyramid</a></dt>
<dd>
<div class="block">Determines if there is a selected card in the pyramid</div>
</dd>
<dt><span class="strong"><a href="../dijordan/model/SelectionManager.html#isSelected()">isSelected()</a></span> - Method in class dijordan.model.<a href="../dijordan/model/SelectionManager.html" title="class in dijordan.model">SelectionManager</a></dt>
<dd>
<div class="block">Decides if there is a selected card somewhere</div>
</dd>
<dt><span class="strong"><a href="../ks/common/model/Card.html#isSelected()">isSelected()</a></span> - Method in class ks.common.model.<a href="../ks/common/model/Card.html" title="class in ks.common.model">Card</a></dt>
<dd>
<div class="block">Determine whether the card has been selected.</div>
</dd>
<dt><span class="strong"><a href="../wordsteal/entities/Dictionary.html#isValidWord(java.lang.String)">isValidWord(String)</a></span> - Method in class wordsteal.entities.<a href="../wordsteal/entities/Dictionary.html" title="class in wordsteal.entities">Dictionary</a></dt>
<dd>&nbsp;</dd>
<dt><span class="strong"><a href="../ks/client/gamefactory/skin/BouncingBalls.html#isVisible()">isVisible()</a></span> - Method in class ks.client.gamefactory.skin.<a href="../ks/client/gamefactory/skin/BouncingBalls.html" title="class in ks.client.gamefactory.skin">BouncingBalls</a></dt>
<dd>
<div class="block">Determine whether image is visible.</div>
</dd>
<dt><span class="strong"><a href="../ks/client/gamefactory/skin/ImageScroller.html#isVisible()">isVisible()</a></span> - Method in class ks.client.gamefactory.skin.<a href="../ks/client/gamefactory/skin/ImageScroller.html" title="class in ks.client.gamefactory.skin">ImageScroller</a></dt>
<dd>
<div class="block">Determine whether image is visible.</div>
</dd>
<dt><span class="strong"><a href="../ks/client/gamefactory/skin/Psychedelic.html#isVisible()">isVisible()</a></span> - Method in class ks.client.gamefactory.skin.<a href="../ks/client/gamefactory/skin/Psychedelic.html" title="class in ks.client.gamefactory.skin">Psychedelic</a></dt>
<dd>
<div class="block">Detect if we are visible.</div>
</dd>
<dt><span class="strong"><a href="../wordsteal/boundaries/main/BoardRackPanel.html#isWithinBoard(int, int)">isWithinBoard(int, int)</a></span> - Method in class wordsteal.boundaries.main.<a href="../wordsteal/boundaries/main/BoardRackPanel.html" title="class in wordsteal.boundaries.main">BoardRackPanel</a></dt>
<dd>
<div class="block">Determines if a given coordinate (relative to the panel) is within the
 board object</div>
</dd>
<dt><span class="strong"><a href="../wordsteal/boundaries/main/BoardRackPanel.html#isWithinRack(int, int)">isWithinRack(int, int)</a></span> - Method in class wordsteal.boundaries.main.<a href="../wordsteal/boundaries/main/BoardRackPanel.html" title="class in wordsteal.boundaries.main">BoardRackPanel</a></dt>
<dd>
<div class="block">Determines if a given coordinate (relative to the panel) is within the</div>
</dd>
<dt><a href="../wordsteal/entities/ITileLocation.html" title="interface in wordsteal.entities"><span class="strong">ITileLocation</span></a> - Interface in <a href="../wordsteal/entities/package-summary.html">wordsteal.entities</a></dt>
<dd>
<div class="block">Interface abstracting away board/rack locations for the purposes of undo</div>
</dd>
<dt><a href="../ks/client/gamefactory/IUpdateStatus.html" title="interface in ks.client.gamefactory"><span class="strong">IUpdateStatus</span></a> - Interface in <a href="../ks/client/gamefactory/package-summary.html">ks.client.gamefactory</a></dt>
<dd>
<div class="block">When a game is in play, either:
 
 (a) the game is won, in which case incrementNumWins
 (b) player requests to reset hands
 (c) player chooses to advance to new hand.</div>
</dd>
<dt><a href="../wordsteal/interfaces/IWordstealApp.html" title="interface in wordsteal.interfaces"><span class="strong">IWordstealApp</span></a> - Interface in <a href="../wordsteal/interfaces/package-summary.html">wordsteal.interfaces</a></dt>
<dd>&nbsp;</dd>
</dl>
<a href="index-1.html">A</a>&nbsp;<a href="index-2.html">B</a>&nbsp;<a href="index-3.html">C</a>&nbsp;<a href="index-4.html">D</a>&nbsp;<a href="index-5.html">E</a>&nbsp;<a href="index-6.html">F</a>&nbsp;<a href="index-7.html">G</a>&nbsp;<a href="index-8.html">H</a>&nbsp;<a href="index-9.html">I</a>&nbsp;<a href="index-10.html">J</a>&nbsp;<a href="index-11.html">K</a>&nbsp;<a href="index-12.html">L</a>&nbsp;<a href="index-13.html">M</a>&nbsp;<a href="index-14.html">N</a>&nbsp;<a href="index-15.html">O</a>&nbsp;<a href="index-16.html">P</a>&nbsp;<a href="index-17.html">Q</a>&nbsp;<a href="index-18.html">R</a>&nbsp;<a href="index-19.html">S</a>&nbsp;<a href="index-20.html">T</a>&nbsp;<a href="index-21.html">U</a>&nbsp;<a href="index-22.html">V</a>&nbsp;<a href="index-23.html">W</a>&nbsp;<a href="index-24.html">Y</a>&nbsp;</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li>Use</li>
<li><a href="../overview-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-8.html">Prev Letter</a></li>
<li><a href="index-10.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-filesindex-9.html" target="_top">Frames</a></li>
<li><a href="index-9.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
